name: CI/CD Pipeline for .NET API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    # Restaurar dependências do projeto de apresentação
    - name: Restore dependencies
      run: dotnet restore ../../FlyPack.Presentation/FlyPack.Presentation.csproj

    # Construir o projeto de apresentação
    - name: Build the project
      run: dotnet build ../../FlyPack.Presentation/FlyPack.Presentation.csproj --configuration Release

    # Rodar os testes
    - name: Run unit tests
      run: dotnet test ../../FlyPack.Presentation/FlyPack.Presentation.csproj --configuration Release

    # Publicar o projeto de apresentação
    - name: Publish the API
      run: dotnet publish ../../FlyPack.Presentation/FlyPack.Presentation.csproj --configuration Release --output ./publish

    # Usar dotnet watch (opcional, normalmente usado para desenvolvimento)
    - name: Watch changes on project (optional, usually for development)
      run: dotnet watch --project ../../FlyPack.Presentation/FlyPack.Presentation.csproj

    # Deploy no Azure
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: flaypack
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: ./publish
